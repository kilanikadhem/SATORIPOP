
type List  {
    id: String!
    title: String!
    items(title: String): [Item]
  }

  type Item {
    _id: String!
    title: String!
    description: String!
    status : String!
    userId: String!
    sharedUsers: [String] 

  }

 type User {
  _id: String!
  name: String!
  lastName: String!
  email: String!
  password: String!
  status : String
  }

  type Query {
    list: [Item]
    users: [User]
    getItemByUser(userId: String!): [Item]
    getSharedItemByUser(userId: String!): [Item]
  }
  type Mutation {
    createItem(title: String, description: String, status: String, userId: String): Item
    updateItem(id: String!, title: String, description: String, status: String,userId: String): Item
    deleteItem(id: String!,userId: String!): String 
    createUser(name: String, lastName: String, email: String,password: String):User
    updateUser(id: String!, name: String, lastName: String, email: String, password: String): User
    deleteUser(id: String!): String 
    loginUser(login: String, password: String): User
    logoutUser(userId: String):User
    commentItem(id: String, description: String,userId:String):Item
    completeItem(id: String!, status: String!, userId: String!):Item
    shareItem(id: String, userToShare: String, userId: String):Item 

  }